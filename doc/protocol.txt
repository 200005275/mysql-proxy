/** 
@page protocol MySQL Protocol

The MySQL Protocol is spilt into the four phases:

@dot
digraph {
connect -> auth;
auth -> command;
command -> disconnect;
command -> command;
connect -> disconnect;
auth -> disconnect;
}
@enddot

The client and the server send and receive packets as documented in http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol 

@dot
digraph states {
  graph [rankdir=LR];
  node [fontname=Helvetica, fontsize=10];

  connect [ shape=record ];
  disconnect [ shape=record ];

  subgraph cluster_client { 
    label = "client";
    style = filled;
    node [ style=filled, fillcolor=lightblue ];
    connect; 
    auth_response; 
    auth_old; 
    command; 
    command_local;
  }

  subgraph cluster_server { 
    label = "server";
    style = filled;
    node [ style=filled, fillcolor=orange ];
    auth_challenge; 
    auth_result; 
    command_result; 
    command_infile;
  }
  
  subgraph { 
    edge [ fontcolor=blue, color=blue, fontsize=10, fontname=Helvetica ];

    connect->auth_challenge [ label = "connecting server" ];
    auth_response->auth_result [ label = "capabilities, password, default-db", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Client_Authentication_Packet" ]; 
    auth_old->auth_result [ label = "scrambled password" ] ; 
    command->command_result [ label = "command (COM_*)", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Command_Packet" ] ;
    command->command_infile [ label = "LOAD DATA INFILE LOCAL" ];
    command_local->command_result [ label = "file content"];
  }

  subgraph {
    edge [ fontcolor=red, color=red, fontsize=10, fontname=Helvetica ];
    auth_challenge->disconnect [ label = "ERR: host denied", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Error_Packet" ];
    auth_challenge->auth_response [ label = "0x10: auth_challenge", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Handshake_Initialization_Packet" ];
    auth_result->auth_old [ label = "EOF: old password reauth" ];
    auth_result->command [ label = "OK: auth done", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#OK_Packet" ];
    auth_result->disconnect [ label = "ERR: auth failed", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Error_Packet" ];
    command_result->command [ label = "OK|ERR|Resultset", URL="http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Result_Set_Header_Packet" ] ;
    command_result->disconnect [ label = "command = COM_QUIT" ];
    command_result->command_result [ label = "command = COM_BINLOG_DUMP" ];
    command_infile->command_local [ label = "EOF: filename" ];
  }
}
@enddot

The @ref page-core exposes all the states to the @ref page-plugins.

@section section-protocol-use-cases Use Cases

-# the client connects to the server and waits for data to return @msc
  client, backend;
  --- [ label = "connect to backend" ];
  client->backend  [ label = "INIT" ];
@endmsc
-# the auth-phase handles the new SHA1-style passwords and the old scramble() passwords 
  -# 4.1+ passwords @msc
  client, backend;
  --- [ label = "authenticate" ];
  backend->client [ label = "HANDSHAKE" ];
  client->backend [ label = "AUTH" ];
  backend->client [ label = "AUTH_RESULT" ];
@endmsc
  -# pre-4.1 passwords @msc
  client, backend;
  --- [ label = "authenticate" ];
  backend->client [ label = "HANDSHAKE" ];
  client->backend [ label = "AUTH" ];
  backend->client [ label = "OLD_PASSWORD_SCRAMBLE" ];
  client->backend [ label = "OLD_PASSWORD_AUTH" ];
  backend->client [ label = "AUTH_RESULT" ];
@endmsc
-# the query-phase repeats 
  -# COM_QUERY and friends @msc
  client, backend;
  --- [ label = "query result phase" ];
  client->backend [ label = "QUERY" ];
  backend->client [ label = "QUERY_RESULT" ];
@endmsc
  -# COM_QUIT @msc
  client, backend;
  --- [ label = "query result phase" ];
  client->backend [ label = "QUERY" ];
  backend->client [ label = "connection close" ];
@endmsc
  -# COM_BINLOG_DUMP @msc
  client, backend;
  --- [ label = "query result phase" ];
  client->backend [ label = "QUERY" ];
  backend->client [ label = "QUERY_RESULT" ];
  ... [ label = "more binlog entries" ];
  backend->client [ label = "QUERY_RESULT"];
@endmsc
 */


