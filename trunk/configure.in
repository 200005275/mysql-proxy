#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.57)
AC_INIT(mysql-proxy, 0.5.0, jan@mysql.com)
AC_CONFIG_SRCDIR([src/mysql-proxy.c])

AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(1.5 gnits)

AC_CONFIG_HEADER([config.h])

AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CC
AC_PROG_LD
AC_PROG_INSTALL
AC_PROG_AWK
AC_PROG_CPP
dnl AC_PROG_CXX
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl check environment
AC_AIX
AC_ISC_POSIX
AC_MINIX

AC_EXEEXT

dnl more automake stuff
AM_C_PROTOTYPES

dnl libtool
dnl AC_DISABLE_STATIC	
dnl AC_ENABLE_SHARED

dnl AC_LIBTOOL_DLOPEN
dnl AC_PROG_LIBTOOL

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([\
	arpa/inet.h  \
	netinet/in.h \
	sys/filio.h  \
	sys/socket.h \
	sys/time.h \
       	sys/un.h \
	fcntl.h ])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C_CHAR_UNSIGNED

# Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRFTIME

# 
AC_SEARCH_LIBS(socket,socket)
AC_SEARCH_LIBS(gethostbyname,nsl socket)
AC_SEARCH_LIBS(hstrerror,resolv)


dnl Checks for database.
MYSQL_INCLUDE=""
MYSQL_LIBS=""

AC_MSG_CHECKING(for MySQL support)
AC_ARG_WITH(mysql,
    AC_HELP_STRING([--with-mysql@<:@=PATH@:>@],[Include MySQL support. PATH is the path to 'mysql_config']),
    [WITH_MYSQL=$withval],[WITH_MYSQL=yes])

if test "$WITH_MYSQL" = "no"; then
  AC_MSG_ERROR([mysql support is required, don't use --with-mysql=no])
fi

AC_MSG_RESULT(yes)  
if test "$WITH_MYSQL" = "yes"; then
  AC_PATH_PROG(MYSQL_CONFIG, mysql_config)
else
  MYSQL_CONFIG=$WITH_MYSQL
fi

if test "$MYSQL_CONFIG" = ""; then
  AC_MSG_ERROR(mysql_config is not found)
fi

if test \! -x $MYSQL_CONFIG; then
  AC_MSG_ERROR(mysql_config not exists or not executable, use --with-mysql=path-to-mysql_config)
fi

if $MYSQL_CONFIG | grep -- '--include' > /dev/null ; then
  MYSQL_INCLUDE="`$MYSQL_CONFIG --include | sed s/\'//g`"
else
  MYSQL_INCLUDE="`$MYSQL_CONFIG --cflags | sed s/\'//g`"
fi

AC_MSG_CHECKING(for MySQL includes at)
AC_MSG_RESULT($MYSQL_INCLUDE)

dnl check for errmsg.h, which isn't installed by some versions of 3.21
old_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $MYSQL_INCLUDE"
AC_CHECK_HEADERS(errmsg.h mysql.h)
CPPFLAGS="$old_CPPFLAGS"

AC_DEFINE([HAVE_MYSQL], [1], [mysql support])

AC_SUBST(MYSQL_LIBS)
AC_SUBST(MYSQL_INCLUDE)

dnl Check for pkg-config
if test -z "$PKG_CONFIG"; then
  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
fi
 
dnl Check for lua
AC_MSG_CHECKING(for lua)
AC_ARG_WITH(lua, AC_HELP_STRING([--with-lua],[lua]),
[WITH_LUA=$withval],[WITH_LUA=yes])

AC_MSG_RESULT($WITH_LUA)
if test "$WITH_LUA" != "no"; then
 # try pkgconfig
 if test "$WITH_LUA" = "yes"; then
    LUAPC=lua
  else
    LUAPC=$WITH_LUA
  fi

 PKG_CHECK_MODULES(LUA, $LUAPC >= 5.1, [
   AC_DEFINE([HAVE_LUA], [1], [liblua])
   AC_DEFINE([HAVE_LUA_H], [1], [lua.h])
 ])

 AC_SUBST(LUA_CFLAGS)
 AC_SUBST(LUA_LIBS)
fi

PKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.4.0, [
  AC_DEFINE([HAVE_GLIB], [1], [libglib])
  AC_DEFINE([HAVE_GLIB_H], [1], [glib.h])
])

case $host_os in
	*mingw* ) LIBS="$LIBS -lwsock32";;
        * ) ;;
esac

dnl on windows we need wsock32 to get socket support
AC_CHECK_FUNCS([inet_ntoa inet_ntop])

dnl make sure we off_t is 64bit
CPPFLAGS="${CPPFLAGS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGE_FILES"

AC_CHECK_LIB(event, event_init, LIBS="$LIBS -levent",AC_MSG_ERROR([libevent is required]))
AC_CHECK_HEADERS([event.h])

AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT


